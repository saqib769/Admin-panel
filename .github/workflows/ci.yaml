name: Build and Run Tests

on:
  push:
    branches:
      - main  # Trigger the pipeline on pull request to the 'main' branch

jobs:
  build:
    name: Build and Run Tests
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    permissions:
      checks: write  # Grant permission to create checks

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: npm install  # Install dependencies from package.json

      # Step 4: Set up Jest and Create a Dummy Test
      - name: Set up Jest and Create a Dummy Test
        run: |
          echo "module.exports = { reporters: ['default', ['jest-junit', { outputDirectory: 'build/test-results/test', outputName: 'TEST-results.xml' }]] };" > jest.config.js
          mkdir -p tests
          echo "test('dummy test', () => { expect(true).toBe(true); });" > tests/dummy.test.js

      # Step 5: Run the Tests
      - name: Run Tests
        run: npm test -- --verbose  # Run Jest with verbose output to help debug failures

      # Step 6: Publish Test Report
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure()  # Ensure this step runs even if tests fail
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'  # Path to the generated JUnit XML report
